{
  "uid" : "5c7d731ee7063279",
  "name" : "查询设备列表",
  "fullName" : "test.test_api#test_main",
  "historyId" : "ee88be9148a730617b573ca871d38066",
  "time" : {
    "start" : 1648886407550,
    "stop" : 1648886407690,
    "duration" : 140
  },
  "status" : "broken",
  "statusMessage" : "TypeError: 'bool' object is not subscriptable",
  "statusTrace" : "cases = ['c24', '查询设备列表', '{\"Authorization\": \"${token}\"}', 'device/list?', 'get', 'json', ...]\n\n    @pytest.mark.flaky(reruns=None, reruns_delay=1) #pytest 失败重跑装饰器\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n>       response, response_code, expect, sql, check_mode = BaseRequest.send_request(cases, env = 'dev')\n\ntest\\test_api.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napi\\base_requests.py:51: in send_request\n    DataProcess.handle_extra(extra, response)\ntools\\data_process.py:116: in handle_extra\n    cls.extra_pool[k] = extractor(response, v)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nobj = {'code': '200', 'data': {'current': 1, 'list': [{'description': '这是飞行器一号', 'deviceId': '111111', 'id': 22, 'isRunning'...'123456', 'id': 44, 'isRunning': False, ...}], 'pageSize': 10, 'total': 5, ...}, 'message': 'success', 'success': True}\nexpr = \"$.data.list[?(@.secretkey=='3338d95c-3774-4afe-9f0c-6d9d9410ea05')].deviceId\"\n\n    def extractor(obj: dict, expr: str = '.') -> object:\n        \"\"\"\n        根据表达式提取字典中的value，表达式, . 提取字典所有内容， $.case 提取一级字典case， $.case.data 提取case字典下的data\n        :param obj :json/dict类型数据\n        :param expr: 表达式, . 提取字典所有内容， $.case 提取一级字典case， $.case.data 提取case字典下的data\n        $.0.1 提取字典中的第一个列表中的第二个的值\n        \"\"\"\n>       logger.info(f\"jsonpath路径：{jsonpath(obj, expr)[0]}\")\nE       TypeError: 'bool' object is not subscriptable\n\ntools\\__init__.py:40: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "cases",
    "time" : {
      "start" : 1648886407550,
      "stop" : 1648886407550,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: 'bool' object is not subscriptable",
    "statusTrace" : "cases = ['c24', '查询设备列表', '{\"Authorization\": \"${token}\"}', 'device/list?', 'get', 'json', ...]\n\n    @pytest.mark.flaky(reruns=None, reruns_delay=1) #pytest 失败重跑装饰器\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n>       response, response_code, expect, sql, check_mode = BaseRequest.send_request(cases, env = 'dev')\n\ntest\\test_api.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napi\\base_requests.py:51: in send_request\n    DataProcess.handle_extra(extra, response)\ntools\\data_process.py:116: in handle_extra\n    cls.extra_pool[k] = extractor(response, v)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nobj = {'code': '200', 'data': {'current': 1, 'list': [{'description': '这是飞行器一号', 'deviceId': '111111', 'id': 22, 'isRunning'...'123456', 'id': 44, 'isRunning': False, ...}], 'pageSize': 10, 'total': 5, ...}, 'message': 'success', 'success': True}\nexpr = \"$.data.list[?(@.secretkey=='3338d95c-3774-4afe-9f0c-6d9d9410ea05')].deviceId\"\n\n    def extractor(obj: dict, expr: str = '.') -> object:\n        \"\"\"\n        根据表达式提取字典中的value，表达式, . 提取字典所有内容， $.case 提取一级字典case， $.case.data 提取case字典下的data\n        :param obj :json/dict类型数据\n        :param expr: 表达式, . 提取字典所有内容， $.case 提取一级字典case， $.case.data 提取case字典下的data\n        $.0.1 提取字典中的第一个列表中的第二个的值\n        \"\"\"\n>       logger.info(f\"jsonpath路径：{jsonpath(obj, expr)[0]}\")\nE       TypeError: 'bool' object is not subscriptable\n\ntools\\__init__.py:40: TypeError",
    "steps" : [ {
      "name" : "请求地址: http://192.168.0.6/api/device/list?",
      "time" : {
        "start" : 1648886407565,
        "stop" : 1648886407565,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "请求头",
      "time" : {
        "start" : 1648886407565,
        "stop" : 1648886407565,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "84852e98bf0690a",
        "name" : "请求头",
        "source" : "84852e98bf0690a.json",
        "type" : "application/json",
        "size" : 382
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    }, {
      "name" : "请求数据",
      "time" : {
        "start" : 1648886407565,
        "stop" : 1648886407565,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "a8b21c88cf840a1c",
        "name" : "请求数据",
        "source" : "a8b21c88cf840a1c.json",
        "type" : "application/json",
        "size" : 4
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    }, {
      "name" : "响应耗时(s): 0.125972",
      "time" : {
        "start" : 1648886407690,
        "stop" : 1648886407690,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : false,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false
    }, {
      "name" : "响应结果",
      "time" : {
        "start" : 1648886407690,
        "stop" : 1648886407690,
        "duration" : 0
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ {
        "uid" : "f920a00d190f9f8c",
        "name" : "响应结果",
        "source" : "f920a00d190f9f8c.json",
        "type" : "application/json",
        "size" : 1976
      } ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "hasContent" : true,
      "attachmentsCount" : 1,
      "shouldDisplayMessage" : false
    } ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 5,
    "hasContent" : true,
    "attachmentsCount" : 3,
    "shouldDisplayMessage" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "tag",
    "value" : "flaky(reruns=None, reruns_delay=1)"
  }, {
    "name" : "parentSuite",
    "value" : "test"
  }, {
    "name" : "suite",
    "value" : "test_api"
  }, {
    "name" : "host",
    "value" : "DESKTOP-BNVFIE4"
  }, {
    "name" : "thread",
    "value" : "9124-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test.test_api"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "cases",
    "value" : "['c24', '查询设备列表', '{\"Authorization\": \"${token}\"}', 'device/list?', 'get', 'json', '', 'check_code', '', '{\"devsid\":\"$.data.list[?(@.secretkey==\\'${secretkey}\\')].deviceId\",\"devid\":\"$.data.list[?(@.secretkey==\\'${secretkey}\\')].id\"}', '', 200.0]"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ "flaky(reruns=None, reruns_delay=1)" ]
  },
  "source" : "5c7d731ee7063279.json",
  "parameterValues" : [ "['c24', '查询设备列表', '{\"Authorization\": \"${token}\"}', 'device/list?', 'get', 'json', '', 'check_code', '', '{\"devsid\":\"$.data.list[?(@.secretkey==\\'${secretkey}\\')].deviceId\",\"devid\":\"$.data.list[?(@.secretkey==\\'${secretkey}\\')].id\"}', '', 200.0]" ]
}