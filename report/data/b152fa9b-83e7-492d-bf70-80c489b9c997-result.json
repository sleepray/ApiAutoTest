{"name": "test_main[cases1]", "status": "broken", "statusDetails": {"message": "ValueError: not enough values to unpack (expected 12, got 11)", "trace": "cases = ['c2', '负载均衡-随机', '{\"Authorization\": \"${token}\"}', 'config/update', 'post', 'json', ...]\n\n    @pytest.mark.flaky(reruns=2, reruns_delay=1) #pytest 失败重跑装饰器\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n>       response, response_code, expect, sql, check_mode = BaseRequest.send_request(cases, env = 'dev')\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'api.base_requests.BaseRequest'>\ncase = ['c2', '负载均衡-随机', '{\"Authorization\": \"${token}\"}', 'config/update', 'post', 'json', ...]\nenv = 'dev'\n\n    @classmethod\n    def send_request(cls, case: list, env: str = 'dev') -> object:\n        \"\"\"处理case数据，转换成可用数据发送请求\n        :param case: 读取出来的每一行用例内容，可进行解包\n        :param env: 环境名称 默认使用config.yaml server下的 dev 后面的基准地址\n        return: 响应结果， 预期结果\n        \"\"\"\n>       case_number, case_title, header, path, method, parametric_key, file_obj, check_mode, data, extra, sql, expect = case\nE       ValueError: not enough values to unpack (expected 12, got 11)\n\napi\\base_requests.py:36: ValueError"}, "parameters": [{"name": "cases", "value": "['c2', '负载均衡-随机', '{\"Authorization\": \"${token}\"}', 'config/update', 'post', 'json', '', '{\"key\":\"loadBalance.default\",\"value\":\"0\",\"configType\":\"global\"}', '', 'INSERT INTO apis(name) VALUES(\"负载均衡\");', '{\"$.data.msg\": \"success\"}']"}], "start": 1642130184390, "stop": 1642130184390, "uuid": "7fa51e08-6b85-4241-87f7-92877245d39a", "historyId": "d5345d39adc3d02ffcaf8f15af49ab18", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=2, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-BNVFIE4"}, {"name": "thread", "value": "21304-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}