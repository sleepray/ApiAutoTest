{"name": "条件表达式添加", "status": "broken", "statusDetails": {"message": "AttributeError: 'dict' object has no attribute 'json'", "trace": "cases = ['c30', '条件表达式添加', '{\"Authorization\": \"${token}\"}', 'condition/add', 'post', 'json', ...]\n\n    @pytest.mark.flaky(reruns=None, reruns_delay=1) #pytest 失败重跑装饰器\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n>       response, response_code, expect, sql, check_mode = BaseRequest.send_request(cases, env = 'dev')\n\ntest\\test_api.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napi\\base_requests.py:49: in send_request\n    response, response_code = cls.send_api(url, method, parametric_key, check_mode, header, data, file)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'api.base_requests.BaseRequest'>\nurl = 'http://192.168.5.120:8080/backend/condition/add', method = 'post'\nparametric_key = 'json', check_mode = ''\nheader = {'Accept-Encoding': 'gzip, deflate', 'Accept-Language': 'zh-CN,zh;q=0.9', 'Authorization': '${token}', 'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/86.0.4240.198 Safari/537.36'}\ndata = {'enabled': True, 'servicename': '服务1', 'tags': [{'address': ['432.1.3.5'], 'tagname': '标签1'}]}\nfile = None\n\n    @classmethod\n    def send_api(\n            cls,\n            url,\n            method,\n            parametric_key,\n            check_mode,\n            header=None,\n            data=None,\n            file=None) -> dict:\n        \"\"\"\n        :param method: 请求方法\n        :param url: 请求url\n        :param parametric_key: 入参关键字， params(查询参数类型，明文传输，一般在url?参数名=参数值), data(一般用于form表单类型参数)\n        json(一般用于json类型请求参数)\n        :param check_mode: 检验方式，有code和json两种\n        :param data: 参数数据，默认等于None\n        :param file: 文件对象\n        :param header: 请求头\n        :return: 返回res对象\n        \"\"\"\n        session = cls.get_session()\n    \n        if parametric_key == 'params':\n            res = session.request(\n                method=method,\n                url=url,\n                params=data,\n                headers=header)\n        elif parametric_key == 'data':\n            res = session.request(\n                method=method,\n                url=url,\n                data=data,\n                files=file,\n                headers=header)\n        elif parametric_key == 'json':\n            res = session.request(\n                method=method,\n                url=url,\n                json=data,\n                files=file,\n                headers=header)\n        else:\n            raise ValueError(\n                '可选关键字为params, json, data')\n    \n    \n    \n        #接口不返回数据时，处理掉\n        try :\n            res.json()\n        except Exception as e:\n            assert res.status_code == 200\n            logger.info(f\"\\n状态为：{res.status_code}\")\n            logger.info(f\"\\n错误{e},返回数据不是json\")\n            return None\n    \n        response = res.json()\n        logger.info(\n            f'\\n最终请求地址:{res.url}\\n请求方法:{method}\\n请求头:{header}\\n请求参数:{data}\\n上传文件:{file}\\n相应状态码{res.status_code}\\n响应数据:{response}')\n        allure_step_no(f'响应耗时(s): {res.elapsed.total_seconds()}')\n>       allure_step('响应结果', response.json())\nE       AttributeError: 'dict' object has no attribute 'json'\n\napi\\base_requests.py:116: AttributeError"}, "steps": [{"name": "请求地址: http://192.168.5.120:8080/backend/condition/add", "status": "passed", "start": 1642130430209, "stop": 1642130430209}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "aaa762b1-1320-450f-8760-cb1aa79eabaf-attachment.json", "type": "application/json"}], "start": 1642130430210, "stop": 1642130430210}, {"name": "请求数据", "status": "passed", "attachments": [{"name": "请求数据", "source": "a33bfccf-2c25-4a28-82b3-5a92bd31fcb0-attachment.json", "type": "application/json"}], "start": 1642130430210, "stop": 1642130430211}, {"name": "响应耗时(s): 0.000893", "status": "passed", "start": 1642130430212, "stop": 1642130430212}], "attachments": [{"name": "stderr", "source": "189fdec9-97c6-4e7e-932b-c2e7d1294d7b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "cases", "value": "['c30', '条件表达式添加', '{\"Authorization\": \"${token}\"}', 'condition/add', 'post', 'json', '', '', '{\"servicename\":\"服务1\",\"enabled\":true,\"tags\":[{\"address\":[\"432.1.3.5\"],\"tagname\":\"标签1\"}]}', '', '', '{\"$.data.servicename\": \"服务1\"}']"}], "start": 1642130430209, "stop": 1642130430213, "uuid": "3c38b35c-28d3-4178-ba76-336cf6b872ba", "historyId": "2cb684a829197011f919e130a4dbfdd0", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=None, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-BNVFIE4"}, {"name": "thread", "value": "20868-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}