{"name": "角色查询获取角色名", "status": "failed", "statusDetails": {"message": "AssertionError: 断言失败 -|- 实际结果:200.0 || 预期结果: 401", "trace": "cls = <class 'tools.data_process.DataProcess'>\nresponse = {'code': '401', 'data': None, 'message': 'token验证失败，请联系管理员!', 'success': False}\nresponse_code = 401, expect_str = 200.0, check_mode = 'check_code'\n\n    @classmethod\n    def assert_result(cls, response: dict, response_code: str, expect_str: str, check_mode: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n    \n        #当接口返回为空时，处理掉\n        if response == None:\n            allure_step(\"当前可用参数池\", cls.extra_pool)\n            logger.info(\n                f'断言结果, 返回值为空,无法断言')\n            allure_step(f'断言结果', f'返回值为空,无法断言')\n            return None\n    \n        if check_mode == 'check_code':\n            allure_step(\"当前可用参数池\", cls.extra_pool)\n            logger.info(\n                f'断言结果, 实际结果:{response_code} | 预期结果:{expect_str} \\n断言结果 {int(expect_str) == int(response_code)}')\n            allure_step(f'断言结果',f'实际结果状态码:{response_code} = 预期结果状态码:{expect_str}')\n            try:\n>               assert int(expect_str) == int(response_code)\nE               AssertionError\n\ntools\\data_process.py:138: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\ncases = ['c13', '角色查询获取角色名', '{\"Authorization\": \"${token}\"}', 'userMgr/roles?pageSize=100', 'get', 'json', ...]\n\n    @pytest.mark.flaky(reruns=None, reruns_delay=1) #pytest 失败重跑装饰器\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n        response, response_code, expect, sql, check_mode = BaseRequest.send_request(cases, env = 'dev')\n        # 断言操作\n>       DataProcess.assert_result(response, response_code, expect, check_mode)\n\ntest\\test_api.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\ncls = <class 'tools.data_process.DataProcess'>\nresponse = {'code': '401', 'data': None, 'message': 'token验证失败，请联系管理员!', 'success': False}\nresponse_code = 401, expect_str = 200.0, check_mode = 'check_code'\n\n    @classmethod\n    def assert_result(cls, response: dict, response_code: str, expect_str: str, check_mode: str):\n        \"\"\" 预期结果实际结果断言方法\n        :param response: 实际响应结果\n        :param expect_str: 预期响应内容，从excel中读取\n        return None\n        \"\"\"\n    \n        #当接口返回为空时，处理掉\n        if response == None:\n            allure_step(\"当前可用参数池\", cls.extra_pool)\n            logger.info(\n                f'断言结果, 返回值为空,无法断言')\n            allure_step(f'断言结果', f'返回值为空,无法断言')\n            return None\n    \n        if check_mode == 'check_code':\n            allure_step(\"当前可用参数池\", cls.extra_pool)\n            logger.info(\n                f'断言结果, 实际结果:{response_code} | 预期结果:{expect_str} \\n断言结果 {int(expect_str) == int(response_code)}')\n            allure_step(f'断言结果',f'实际结果状态码:{response_code} = 预期结果状态码:{expect_str}')\n            try:\n                assert int(expect_str) == int(response_code)\n            except AssertionError:\n>               raise AssertionError(\n                    f'断言失败 -|- 实际结果:{expect_str} || 预期结果: {response_code}')\nE               AssertionError: 断言失败 -|- 实际结果:200.0 || 预期结果: 401\n\ntools\\data_process.py:140: AssertionError"}, "steps": [{"name": "请求地址: http://192.168.0.6/api/userMgr/roles?pageSize=100", "status": "passed", "start": 1648882062864, "stop": 1648882062864}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "9cb05c02-5816-4f75-bbd4-6f9d32aef5bd-attachment.json", "type": "application/json"}], "start": 1648882062864, "stop": 1648882062864}, {"name": "请求数据", "status": "passed", "attachments": [{"name": "请求数据", "source": "3c8b253e-0221-4943-89a8-a24c6e2fcf04-attachment.json", "type": "application/json"}], "start": 1648882062864, "stop": 1648882062864}, {"name": "响应耗时(s): 0.017862", "status": "passed", "start": 1648882062879, "stop": 1648882062879}, {"name": "响应结果", "status": "passed", "attachments": [{"name": "响应结果", "source": "b3c6ab0c-7204-418c-bbdc-bbb6291e82a1-attachment.json", "type": "application/json"}], "start": 1648882062879, "stop": 1648882062879}, {"name": "当前可用参数池", "status": "passed", "attachments": [{"name": "当前可用参数池", "source": "d121246b-9439-4e33-b078-9989f9bd4d9e-attachment.json", "type": "application/json"}], "start": 1648882062879, "stop": 1648882062879}, {"name": "断言结果", "status": "passed", "attachments": [{"name": "断言结果", "source": "915d6cf1-a248-40a7-a83c-14be22fbf722-attachment.json", "type": "application/json"}], "start": 1648882062879, "stop": 1648882062879}], "parameters": [{"name": "cases", "value": "['c13', '角色查询获取角色名', '{\"Authorization\": \"${token}\"}', 'userMgr/roles?pageSize=100', 'get', 'json', '', 'check_code', '', '', '', 200.0]"}], "start": 1648882062864, "stop": 1648882062879, "uuid": "639ab0bb-efd7-4e4c-af87-57eee77d46ee", "historyId": "d9a0d8b349872450f96c814afdee344e", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=None, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-BNVFIE4"}, {"name": "thread", "value": "13328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}