{"name": "角色查询获取id", "status": "broken", "statusDetails": {"message": "TypeError: expected string or bytes-like object", "trace": "cases = ['c17', '角色查询获取id', '{\"Authorization\": \"${token}\"}', 'userMgr/roles?pageSize=100', 'get', 'json', ...]\n\n    @pytest.mark.flaky(reruns=None, reruns_delay=1) #pytest 失败重跑装饰器\n    def test_main(cases):   # 不使用数据库功能\n        # 发送请求\n>       response, response_code, expect, sql, check_mode = BaseRequest.send_request(cases, env = 'dev')\n\ntest\\test_api.py:37: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\napi\\base_requests.py:51: in send_request\n    DataProcess.handle_extra(extra, response)\ntools\\data_process.py:112: in handle_extra\n    response = rep_expr(response, cls.extra_pool)\ntools\\__init__.py:54: in rep_expr\n    content = Template(content).safe_substitute(data)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <string.Template object at 0x000002570B6EF490>, mapping = {}, kws = {}\nconvert = <function Template.safe_substitute.<locals>.convert at 0x000002570B6F0C10>\n\n    def safe_substitute(self, mapping=_sentinel_dict, /, **kws):\n        if mapping is _sentinel_dict:\n            mapping = kws\n        elif kws:\n            mapping = _ChainMap(kws, mapping)\n        # Helper function for .sub()\n        def convert(mo):\n            named = mo.group('named') or mo.group('braced')\n            if named is not None:\n                try:\n                    return str(mapping[named])\n                except KeyError:\n                    return mo.group()\n            if mo.group('escaped') is not None:\n                return self.delimiter\n            if mo.group('invalid') is not None:\n                return mo.group()\n            raise ValueError('Unrecognized named group in pattern',\n                             self.pattern)\n>       return self.pattern.sub(convert, self.template)\nE       TypeError: expected string or bytes-like object\n\nE:\\python3.9.6\\lib\\string.py:142: TypeError"}, "steps": [{"name": "请求地址: http://192.168.0.6/api/userMgr/roles?pageSize=100", "status": "passed", "start": 1648882063004, "stop": 1648882063004}, {"name": "请求头", "status": "passed", "attachments": [{"name": "请求头", "source": "1fe2505e-d056-471b-8036-5911308a3d58-attachment.json", "type": "application/json"}], "start": 1648882063004, "stop": 1648882063004}, {"name": "请求数据", "status": "passed", "attachments": [{"name": "请求数据", "source": "513c8f88-cd6a-4519-a1ee-8e50fa67fc73-attachment.json", "type": "application/json"}], "start": 1648882063004, "stop": 1648882063004}, {"name": "响应耗时(s): 0.014642", "status": "passed", "start": 1648882063020, "stop": 1648882063020}, {"name": "响应结果", "status": "passed", "attachments": [{"name": "响应结果", "source": "67f3bafc-8c77-415a-aeb4-1a0e78ff9339-attachment.json", "type": "application/json"}], "start": 1648882063020, "stop": 1648882063020}], "parameters": [{"name": "cases", "value": "['c17', '角色查询获取id', '{\"Authorization\": \"${token}\"}', 'userMgr/roles?pageSize=100', 'get', 'json', '', 'check_code', '', '{\"new_username\":\"$.data.list[?(@.name==\\'test\\')].name\",\"roleId0\":\"$.data.list[?(@.name==\\'test\\')].id\",\"roleId1\":\"$.data.list[?(@.name==\\'new_username1\\')].id\",\"roleId2\":\"$.data.list[?(@.name==\\'new_username2\\')].id\",\"roleId3\":\"$.data.list[?(@.name==\\'new_username3\\')].id\"}', '', 200.0]"}], "start": 1648882063004, "stop": 1648882063020, "uuid": "7a4f5c18-6eb0-42e6-ab17-87b494ad53ef", "historyId": "2a3dfa6b36ee5ab01504c51319b8492e", "testCaseId": "881516e7ef2e2aa5436f6a3c3e6a5bcb", "fullName": "test.test_api#test_main", "labels": [{"name": "tag", "value": "flaky(reruns=None, reruns_delay=1)"}, {"name": "parentSuite", "value": "test"}, {"name": "suite", "value": "test_api"}, {"name": "host", "value": "DESKTOP-BNVFIE4"}, {"name": "thread", "value": "13328-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.test_api"}]}